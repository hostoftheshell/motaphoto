{"version":3,"sources":["script.js"],"names":["document","addEventListener","mainContainer","querySelector","siteHeader","menuButton","menuContent","menuLinks","querySelectorAll","toggleMenu","classList","contains","add","remove","once","toggle","forEach","link","contactButtons","contactOverlay","closeButton","toggleContactOverlay","button","event","target","setTimeout","parentElement","childNodes","node","nodeType","Node","TEXT_NODE","nodeValue","trim","links","previewContainer","preview","style","opacity","visibility","transition","thumbnailUrl","this","getAttribute","src"],"mappings":"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","file":"main.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const mainContainer = document.querySelector('.main-container');\n    const siteHeader = document.querySelector('.site-header');\n    const menuButton = document.querySelector('.menu__button'); // Selects the menu button\n    const menuContent = document.querySelector('#primary-navigation'); // Selects the menu content\n    const menuLinks = document.querySelectorAll('#primary-navigation .main-menu .menu-item'); // Selects all menu links\n\n    function toggleMenu() {\n        const isOpen = menuContent.classList.contains('menu-active');\n\n        if (isOpen) {\n            // Trigger the closing animation\n            menuContent.classList.add('menu-closing');\n\n            // Once the closing animation starts, remove the overlay\n            menuContent.addEventListener('animationstart', function () {\n                mainContainer.classList.remove('overlay-active');\n            }, { once: true });\n\n            // After the animation ends, clean up classes\n            menuContent.addEventListener('animationend', function () {\n                menuContent.classList.remove('menu-active');\n                menuContent.classList.remove('menu-closing');\n                siteHeader.classList.remove('nav-active');\n                \n            }, { once: true });\n\n        } else {\n            // Add the overlay first\n            mainContainer.classList.add('overlay-active');\n\n            // Trigger the opening animation\n            menuContent.classList.add('menu-active');\n            siteHeader.classList.add('nav-active');\n            // Optionally, you can clean up or add additional actions after the opening animation ends\n            siteHeader.addEventListener('animationend', function () {\n                mainContainer.classList.remove('overlay-active');\n            }, { once: true });\n        }\n\n        // Toggle the 'menu-active' class on the menu button\n        menuButton.classList.toggle('menu-active');\n    }\n\n    // Attach the toggleMenu function to the menu button click event\n    menuButton.addEventListener('click', toggleMenu);\n\n    // Attach the toggleMenu function to each menu link to close the menu when a link is clicked\n    menuLinks.forEach(function (link) {\n        link.addEventListener('click', function () {\n            if (menuContent.classList.contains('menu-active')) {\n                toggleMenu();\n            }\n        });\n    });\n});\n\n\n\n// Fonction d'animation pour l'ouverture du formulaire de contact\ndocument.addEventListener('DOMContentLoaded', () => {\n    const contactButtons = document.querySelectorAll('.single-contact__btn, .menu-contact__btn'); // Select all contact buttons\n    const contactOverlay = document.querySelector('.contact-overlay');\n    const closeButton = document.querySelector('.close-btn');\n    \n    // Function to toggle the visibility of the contact overlay with animation\n    function toggleContactOverlay() {\n        if (contactOverlay.classList.contains('hidden')) {\n            contactOverlay.classList.remove('hidden');\n            contactOverlay.classList.add('fade-in');\n        } else {\n            contactOverlay.classList.remove('fade-in');\n            contactOverlay.classList.add('fade-out');\n            // Wait for the animation to finish before adding the 'hidden' class\n            contactOverlay.addEventListener('animationend', () => {\n                contactOverlay.classList.add('hidden');\n                contactOverlay.classList.remove('fade-out');\n            }, { once: true });\n        }\n    }\n\n    // Event listener for each contact button to open the overlay\n    contactButtons.forEach(button => {\n        button.addEventListener('click', toggleContactOverlay);\n    });\n\n    // Event listener for the close button to close the overlay\n    closeButton.addEventListener('click', toggleContactOverlay);\n\n    // Optional: Close the overlay when clicking outside of it\n    contactOverlay.addEventListener('click', (event) => {\n        if (event.target === contactOverlay) {\n            toggleContactOverlay();\n        }\n    });\n\n    // Event listener for form submission using wpcf7 events\n    document.addEventListener('wpcf7mailsent', function () {\n        // Delay the closing of the overlay by 2 seconds (2000 milliseconds)\n        setTimeout(toggleContactOverlay, 1000); \n    }, false);\n});\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const parentElements = document.querySelectorAll('.contact-overlay__header-wrapper');\n\n    parentElements.forEach((parentElement) => {\n        parentElement.childNodes.forEach((node) => {\n            if (node.nodeType === Node.TEXT_NODE && !node.nodeValue.trim()) {\n                node.remove();\n            }\n        });\n    });\n});\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const links = document.querySelectorAll('a[data-thumbnail]');\n    const previewContainer = document.querySelector('.post-thumbnail-preview');\n    const preview = previewContainer.querySelector('img');\n\n    // Initialize preview container styles\n    previewContainer.style.opacity = '0';          // Start as invisible\n    previewContainer.style.visibility = 'hidden';  // Hidden by default\n    previewContainer.style.transition = 'opacity 0.3s ease'; // Smooth fade-in/out\n\n    links.forEach(link => {\n        link.addEventListener('mouseover', function () {\n            const thumbnailUrl = this.getAttribute('data-thumbnail');\n            preview.src = thumbnailUrl;\n            previewContainer.style.opacity = '1';      // Fade in the preview\n            previewContainer.style.visibility = 'visible'; // Make it visible\n        });\n\n        link.addEventListener('mouseout', function () {\n            previewContainer.style.opacity = '0';      // Fade out the preview\n            previewContainer.style.visibility = 'hidden'; // Hide it after fade out\n        });\n    });\n});"]}